{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interceptXMLHttpRequest = void 0;\n\nvar XMLHttpRequestOverride_1 = require(\"./XMLHttpRequestOverride\");\n\nvar debug = require('debug')('XHR');\n\nvar pureXMLHttpRequest = // Although executed in node, certain processes emulate the DOM-like environment\n// (i.e. `js-dom` in Jest). The `window` object would be avilable in such environments.\ntypeof window === 'undefined' ? undefined : window.XMLHttpRequest;\n/**\n * Intercepts requests issued via `XMLHttpRequest`.\n */\n\nvar interceptXMLHttpRequest = function (observer, resolver) {\n  if (pureXMLHttpRequest) {\n    debug('patching \"XMLHttpRequest\" module...');\n    var XMLHttpRequestOverride = XMLHttpRequestOverride_1.createXMLHttpRequestOverride({\n      pureXMLHttpRequest: pureXMLHttpRequest,\n      observer: observer,\n      resolver: resolver\n    });\n    window.XMLHttpRequest = XMLHttpRequestOverride;\n  }\n\n  return function () {\n    if (pureXMLHttpRequest) {\n      debug('restoring modules...');\n      window.XMLHttpRequest = pureXMLHttpRequest;\n    }\n  };\n};\n\nexports.interceptXMLHttpRequest = interceptXMLHttpRequest;","map":{"version":3,"mappings":";;;;;;;AACA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,KAAjB,CAAd;;AAEA,IAAMC,kBAAkB,GACtB;AACA;AACA,OAAOC,MAAP,KAAkB,WAAlB,GAAgCC,SAAhC,GAA4CD,MAAM,CAACE,cAHrD;AAKA;;;;AAGO,IAAMC,uBAAuB,GAAgB,UAACC,QAAD,EAAWC,QAAX,EAAmB;AACrE,MAAIN,kBAAJ,EAAwB;AACtBF,SAAK,CAAC,qCAAD,CAAL;AAEA,QAAMS,sBAAsB,GAAGC,sDAA6B;AAC1DR,wBAAkB,oBADwC;AAE1DK,cAAQ,UAFkD;AAG1DC,cAAQ;AAHkD,KAA7B,CAA/B;AAMAL,UAAM,CAACE,cAAP,GAAwBI,sBAAxB;AACD;;AAED,SAAO;AACL,QAAIP,kBAAJ,EAAwB;AACtBF,WAAK,CAAC,sBAAD,CAAL;AAEAG,YAAM,CAACE,cAAP,GAAwBH,kBAAxB;AACD;AACF,GAND;AAOD,CApBM;;AAAMS,kCAAuBL,uBAAvB","names":["debug","require","pureXMLHttpRequest","window","undefined","XMLHttpRequest","interceptXMLHttpRequest","observer","resolver","XMLHttpRequestOverride","XMLHttpRequestOverride_1","exports"],"sources":["/Users/yigitzarbun/Desktop/Workintech/sprint_6/sprint6_challenge/FSWeb-S6-Challenge/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/index.ts"],"sourcesContent":["import { Interceptor } from '../../createInterceptor'\nimport { createXMLHttpRequestOverride } from './XMLHttpRequestOverride'\n\nconst debug = require('debug')('XHR')\n\nconst pureXMLHttpRequest =\n  // Although executed in node, certain processes emulate the DOM-like environment\n  // (i.e. `js-dom` in Jest). The `window` object would be avilable in such environments.\n  typeof window === 'undefined' ? undefined : window.XMLHttpRequest\n\n/**\n * Intercepts requests issued via `XMLHttpRequest`.\n */\nexport const interceptXMLHttpRequest: Interceptor = (observer, resolver) => {\n  if (pureXMLHttpRequest) {\n    debug('patching \"XMLHttpRequest\" module...')\n\n    const XMLHttpRequestOverride = createXMLHttpRequestOverride({\n      pureXMLHttpRequest,\n      observer,\n      resolver,\n    })\n\n    window.XMLHttpRequest = XMLHttpRequestOverride\n  }\n\n  return () => {\n    if (pureXMLHttpRequest) {\n      debug('restoring modules...')\n\n      window.XMLHttpRequest = pureXMLHttpRequest\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}